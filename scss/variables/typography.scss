@use "sass:map";

$font-dir: "../fonts" !default;

// QC Font Family
$font-roboto: "Roboto", sans-serif;
$font-open-sans: "Open Sans", sans-serif;
$content-font: $font-open-sans;
$header-font: $font-roboto;

// QC Font Weight
$font-weigh-bold: bold;
$font-weigh-normal: normal;

// Font sizes and line height associations
// … for content
$font-sizes: (
  "content": (
      14: 20,
      16: 24,
      18: 24,
      22: 32,
      28: 40,
      32: 48
  ),
  "header": (
      16: 20,
      19: 24,
      21: 24,
      25: 32,
      29: 32,
      28: 32,
      35: 40,
      36: 40,
      48: 56
  )
);

// toujours utiliser ces mixins pour la déclarations des tailles de police:
// cela garantit que la taille police est conforme aux exigences du SDG
// et ajoute automatiquement le bon interlignage
@mixin content-font($font-size) {
  @include font-size($font-size, map.get($font-sizes, "content"));
}

@mixin header-font($font-size) {
  @include font-size($font-size, map.get($font-sizes, "header"));
  font-weight: bold;
}

@mixin font-size($font-size,$map) {
   @if (not map.has-key($map, $font-size)) {
     $font-size : next-font-size($font-size, $map);
   }
   $line-height:  map.get($map, $font-size);
   @if $line-height {
      font-size: #{$font-size * .1}rem;
      line-height: #{$line-height * .1}rem;
   }
}

@function next-font-size($font-size, $font-sizes) {
  $fallback: 0;
  @each $level,$line-height in $font-sizes {
    @if $level > $font-size {
      @debug $level;
      @return $level;
    }
    $fallback: $level;
  }
  @debug $fallback;
  @return $fallback;
}
