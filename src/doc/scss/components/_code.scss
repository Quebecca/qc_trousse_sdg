@use "settings/settings" as *;
@use "functions/utils" as *;
@use "modules/tokens" as *;
@use "modules/utils" as *;

qc-code {
  display: block;
  max-inline-size: token-value(max-content-width);
}

pre {
  margin: 0;
  padding: 0;
  white-space: pre-wrap;
  overflow: scroll;

  code, .qc-code {
    font-family: token-value(font, family, code);

    button {
      float: right;
      //position: absolute;
      right: token-value(spacer xs);
      top: token-value(spacer xs);
      padding: token-value(spacer xs) token-value(spacer sm) ;
      color : white;
      background-color: token-value(color blue piv);
      border: 1px solid;
      white-space: nowrap;
      transition: none!important;
      .copy {display: inline;}
      .copied {display: none;}
      &.copied {
        background-color: transparent!important;
        border-color: transparent!important;;
        box-shadow: none!important;
        color: token-value(color blue piv)!important;
        .copy {display: none;}
        .copied {
          display: inline;
          //animation: fadeout .5s;
        }
      }
    }
  }
}

@keyframes fadeout {
  0%,40% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

* + qc-code {
  margin-top: token-value(spacer md);
  & + * {
    margin-top: token-value(spacer lg);
  }
}


pre code.hljs {
  display: block;
  overflow-x: auto;
  padding: 1em
}
code.hljs {
  padding: rem(4)
}

pre code.hljs {
  display: block;
  overflow-x: auto;
  padding: rem(16)
}
code.hljs {
  padding: rem(4)
}
/* end baseline CSS */
.hljs {
  background: token-value(color grey pale);
  color: token-value(color blue dark)
}
/* Base color: saturation 0; */
.hljs-subst {
  /* default */

}
/* purposely ignored */
.hljs-formula,
.hljs-attr,
.hljs-property,
.hljs-params {

}
.hljs-comment {
  color: token-value(color grey dark)
}
.hljs-tag,
.hljs-punctuation {
  color: token-value(color blue medium)
}
.hljs-tag .hljs-name,
.hljs-tag .hljs-attr {
  color: token-value(color blue dark)
}
.hljs-keyword,
.hljs-attribute,
.hljs-selector-tag,
.hljs-meta .hljs-keyword,
.hljs-doctag,
.hljs-name {
  font-weight: bold
}
/* User color: hue: 0 */
.hljs-type,
.hljs-string,
.hljs-number,
.hljs-selector-id,
.hljs-selector-class,
.hljs-quote,
.hljs-template-tag,
.hljs-deletion {
  color: token-value(color red dark)
}
.hljs-title,
.hljs-section {
  color: token-value(color red dark);
  font-weight: bold
}
.hljs-regexp,
.hljs-symbol,
.hljs-variable,
.hljs-template-variable,
.hljs-link,
.hljs-selector-attr,
.hljs-operator,
.hljs-selector-pseudo {
  color: token-value(color pink regular)
}
/* Language color: hue: 90; */
.hljs-literal {
  color: token-value(color green regular)
}
.hljs-built_in,
.hljs-bullet,
.hljs-code,
.hljs-addition {
  color: token-value(color green dark)
}
/* Meta color: hue: 200 */
.hljs-meta {
  color: token-value(color blue medium)
}
.hljs-meta .hljs-string {
  color: token-value(color blue regular)
}
/* Misc effects */
.hljs-emphasis {
  font-style: italic
}
.hljs-strong {
  font-weight: bold
}
