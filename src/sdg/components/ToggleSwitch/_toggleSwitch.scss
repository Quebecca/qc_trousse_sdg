@use "qc-sdg-lib" as *;
@use "sass:math";

$width: 56;
$height: 32;
$border: 1;

.qc-switch {
  display: flex;
  grid-template-columns: auto 1fr;
  margin: 0;
  justify-content: flex-end;
  gap: token-value(spacer, sm);
  position: relative;
  cursor: pointer;

  &:has(input:disabled) {
    color: token-value(color, grey, regular);
    cursor: not-allowed;
  }

  input[type=checkbox] {
    opacity: 0;
    width: 0;
    height: 0;

    position: absolute;

    &:checked ~ .qc-switch-slider {
      background-color: token-value(color, blue, regular);
      border-color: transparent;

      &::before {
        transform: translateX(rem($width - $height));
      }
    }

    &:focus ~ .qc-switch-slider {
      outline: rem(2) solid token-value(color, blue, light);
      outline-offset: rem(2);
    }

    &:disabled ~ .qc-switch-slider {
      border-color: transparent;
      cursor: not-allowed;

      &::before {
        outline: transparent;
      }
    }
  }
}

.qc-switch-label {
  margin-top: rem(3);
  justify-self: end;
}

.qc-switch-slider {
  display: inline-flex;
  position: relative;
  cursor: pointer;
  min-width: rem($width);
  min-height: rem($height);
  max-width: rem($width);
  max-height: rem($height);
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: token-value(color, grey, light);
  transition: background-color .3s ease-out;
  border-radius: rem(math.div($height, 2));
  border: rem($border) solid token-value(color, grey, medium);

  &::before {
    position: absolute;
    content: "";
    height: rem($height - 6 * $border);
    width: rem($height - 6 * $border);
    left: rem(2*$border);
    bottom: rem(2*$border);
    background-color: token-value(color, white);
    outline: rem($border) solid rgba(token-value(color, blue, dark, rgb), 50%);
    border-radius: 50%;
    transition: all .3s ease-out;
  }
}