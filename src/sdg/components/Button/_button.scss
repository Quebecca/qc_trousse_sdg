@use "qc-sdg-lib" as *;
@use "sass:map";

.qc-button {
  font-family: token-value(font family, content);
  font-size: token-value(font size, md);
  font-weight: token-value(font weight, bold);
  line-height: token-value(line height, md);
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: rem(8);
  box-sizing: border-box;
  min-width: rem(112);
  max-width: rem(360);
  min-height: rem(56);
  padding: rem(16) rem(24);
  transition: all 0.24s ease-in-out;
  vertical-align: middle;
  border: 2px solid transparent;
  cursor: pointer;
  margin-right: rem(32);
  margin-bottom: token-value(spacer, md);


  @include media-mobile() {
    width: 100%;
  }

  &:focus,
  &:focus-visible {
    outline: none;
  }

  &.qc-compact {
    font-weight: token-value(font weight, semi-bold);
    min-width: rem(80);
    min-height: rem(40);
    padding: rem(8) rem(16);
    border-width: 1px;
    margin-right: token-value(spacer, md);
    margin-bottom: token-value(spacer, sm);

    @include media-mobile() {
      width: 100%;
    }
  }

  &.qc-button-rounded {
    border-radius: rem(4);
  }

  &.qc-primary {
    color: token-value(color white);
    background-color: token-value(color blue piv);
    border-color: token-value(color blue piv);
    box-shadow: 0 1px 4px token-value(color box_shadow);

    &:hover:not(:disabled) {
      background-color: token-value(color blue, regular);
      border-color: token-value(color blue, regular);
    }

    &:focus:not(:disabled) {
      background-color: token-value(color blue, regular);
      border-color: token-value(color blue, dark);
      box-shadow:
              0 2px 8px token-value(color box_shadow),
              0 0 0 2px token-value(color blue, light);
    }

    &:active:not(:disabled) {
      background-color: token-value(color blue, regular_light);
      border-color: token-value(color blue, regular_light);
    }
  }

  &.qc-secondary {
    color: token-value(color blue, piv);
    background-color: token-value(color white);
    border-color: token-value(color blue, piv);

    &:hover:not(:disabled),
    &:focus:not(:disabled),
    &:active:not(:disabled) {
      background-color: rgba(map.get(map.get(map.get($xl-tokens, color), blue), piv), 0.16);
    }

    &:focus:not(:disabled) {
      border-color: token-value(color blue, dark);
      box-shadow: 0 0 0 2px token-value(color blue, light);
    }

    &:active:not(:disabled) {
      background-color: rgba(map.get(map.get(map.get($xl-tokens, color), blue), piv), 0.08);
    }
  }

  &.qc-tertiary {
    color: token-value(color blue, piv);
    background-color: token-value(color white);
    border-color: token-value(color white);

    &:hover:not(:disabled) {
      background-color: rgba(map.get(map.get(map.get($xl-tokens, color), grey), light), 0.24);
      text-decoration: underline;
    }

    &:focus:not(:disabled) {
      background-color: rgba(map.get(map.get(map.get($xl-tokens, color), grey), light), 0.24);
      border-color: token-value(color blue, dark);
      box-shadow: 0 0 0 2px token-value(color blue, light);
    }

    &:active:not(:disabled) {
      background-color: rgba(map.get(map.get(map.get($xl-tokens, color), grey), light), 0.16);
    }
  }

  &.qc-danger {
    color: token-value(color white);
    background-color: token-value(color red regular);
    border-color: token-value(color white);

    &:hover:not(:disabled) {
      background-color: token-value(color red medium);
    }

    &:focus:not(:disabled) {
      background-color: token-value(color red medium);
      border-color: token-value(color blue, dark);
      box-shadow: 0 0 0 2px token-value(color blue, light);
    }

    &:active:not(:disabled) {
      background-color: token-value(color red regular_light);
    }
  }

  &:disabled,
  &.qc-disabled {
    background-color: token-value(color grey, light);
    border-color: token-value(color grey, light);
    color: token-value(color white);
    cursor: not-allowed;
    box-shadow: none;
    opacity: 1;
  }

  .qc-icon {
    display: inline-block;
    width: rem(16);
    height: rem(16);
    background-color: currentColor;
    mask-size: 100% 100%;
    mask-repeat: no-repeat;
    flex-shrink: 0;

    &.qc-custom-icon {
      mask:var(--img-src);
      mask-size: 100% 100%;
    }
  }

  &.qc-simple {
    color: token-value(color blue, piv);
    background-color: transparent;
    border-color: transparent;
    padding: 0;
    min-width: unset;
    min-height: unset;

    &:hover:not(:disabled),
    &:active:not(:disabled) {
      text-decoration: underline;
    }

    &:focus:not(:disabled) {
      border-color: token-value(color blue, light);
      box-shadow: 0 0 0 2px token-value(color blue, light);
    }

    &.qc-compact {
      font-size: token-value(font size, sm);
      line-height: token-value(line height, sm);
    }

    &:disabled,
    &.qc-disabled {
      color: token-value(color, grey regular);
      cursor: not-allowed;
      box-shadow: none;
      opacity: 1;
    }
  }

  @at-root a#{&}{
    text-decoration: none;
  }
}
