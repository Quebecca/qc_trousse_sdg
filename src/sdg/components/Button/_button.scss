@use "qc-sdg-lib" as *;
@use "sass:map";

.qc-button {
  font-family: token-value(font family, content);
  font-size: token-value(font size, md);
  font-weight: token-value(font weight, bold);
  line-height: token-value(line height, md);
  display: inline-block;
  box-sizing: border-box;
  min-width: 112px;
  width: auto;
  min-height: 56px;
  padding: 16px 24px;
  transition: all 0.24s ease-in-out;
  vertical-align: middle;
  border: 2px solid transparent;
  cursor: pointer;
  margin-right: rem(32);
  margin-bottom: token-value(spacer, md);

  @include media-mobile() {
    width: 100%;
  }

  &.qc-button-compact {
    font-weight: token-value(font weight, semi-bold);
    min-width: 80px;
    min-height: 40px;
    padding: 8px 16px;
    border-width: 1px;

    @include media-mobile() {
      width: 100%;
    }
  }

  &.qc-button-rounded {
    border-radius: 4px;
  }

  &.qc-primary {
    color: token-value(color white);
    border-color: token-value(color blue piv);
    background-color: token-value(color blue piv);
    box-shadow: 0 1px 4px rgba(map.get(map.get(map.get($xl-tokens, color), blue), dark), 0.24);

    &:hover:not(:disabled) {
      border-color: token-value(color blue, regular);
      background-color: token-value(color blue, regular);
    }

    &:focus:not(:disabled) {
      border-color: token-value(color blue, dark);
      background-color: token-value(color blue, regular);
      box-shadow:
        0 2px 8px rgba(map.get(map.get(map.get($xl-tokens, color), blue), dark), 0.24),
        0 0 0 2px token-value(color blue, light);
    }

    &:active:not(:disabled) {
      border-color: token-value(color blue, regular_light);
      background-color: token-value(color blue, regular_light);
    }
  }

  &.qc-secondary {
    color: token-value(color blue, piv);
    border-color: token-value(color blue, piv);
    background-color: token-value(color white);

    &:hover:not(:disabled) {
      background-color: rgba(map.get(map.get(map.get($xl-tokens, color), blue), piv), 0.16);
    }

    &:focus:not(:disabled) {
      border-color: token-value(color blue, dark);
      background-color: rgba(map.get(map.get(map.get($xl-tokens, color), blue), piv), 0.16);
      box-shadow: 0 0 0 2px token-value(color blue, light);
    }

    &:active:not(:disabled) {
      background-color: rgba(map.get(map.get(map.get($xl-tokens, color), blue), piv), 0.08);
    }
  }

  &.qc-tertiary {
    color: token-value(color blue, piv);
    border-color: token-value(color white);
    background-color: token-value(color white);

    &:hover:not(:disabled) {
      background-color: rgba(map.get(map.get(map.get($xl-tokens, color), grey), light), 0.24);
      text-decoration: underline;
    }

    &:focus:not(:disabled) {
      border-color: token-value(color blue, dark);
      background-color: rgba(map.get(map.get(map.get($xl-tokens, color), grey), light), 0.24);
      box-shadow: 0 0 0 2px token-value(color blue, light);
    }

    &:active:not(:disabled) {
      background-color: rgba(map.get(map.get(map.get($xl-tokens, color), grey), light), 0.16);
    }
  }

  &.qc-danger {
    color: token-value(color white);
    border-color: token-value(color white);
    background-color: token-value(color red regular);

    &:hover:not(:disabled) {
      background-color: token-value(color red medium);
    }

    &:focus:not(:disabled) {
      border-color: token-value(color blue, dark);
      background-color: token-value(color red medium);
      box-shadow: 0 0 0 2px token-value(color blue, light);
    }

    &:active:not(:disabled) {
      background-color: token-value(color red regular_light);
    }
  }

  &:disabled,
  &.disabled {
    background-color: token-value(color grey, light);
    border-color: token-value(color grey, light);
    color: token-value(color, white);
    cursor: not-allowed;
    box-shadow: none;
    opacity: 1;
  }
}
