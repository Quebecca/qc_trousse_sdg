@use "qc-sdg-lib" as *;

@mixin check-style($type, $size: md) {
  display: flex;
  align-items: center;
  min-height: token-value(spacer, md);
  margin: 0;
  padding: 0;

  input[type="#{$type}"] {

    width: token-value(spacer, $size);
    height: token-value(spacer, $size);
    @if $size == "md" {
      border-width: 2px;
    }
    @else  {
      border-width: 1px;
    }

    appearance: none;
    cursor: pointer;

    display: flex;
    position: relative;

    margin: 0;

    background-color: token-value(color, white);
    border-style: solid;
    border-color: token-value(color, blue, dark);
    @if $type == "radio" {
      border-radius: 100%;
    }


    &::before {
      content: "";
      position: absolute;
      margin: auto;
      inset: 0;
      overflow: hidden;
      opacity: 0;
    }

    &:focus {
      outline: 2px solid token-value(color, blue, light);
      outline-offset: 0;
      border-color: token-value(color, blue, dark) !important;
      border-width: 2px;
    }

    &:checked {
      border-color: token-value(color blue regular);

      @if $type == "radio" {
          &::before {
            opacity: 1;
            border-radius: 100%;
            background-color: token-value(color, blue, regular);
          }
      }

    }

    &:disabled {
      cursor: not-allowed;
      border-color: token-value(color, grey, light);
    }

    &:disabled+label {
      color: token-value(color, grey, regular);
      cursor: not-allowed;
    }
  }

  label {
    display: flex;
    align-items: end;
    cursor: pointer;
    padding-left: token-value(spacer, xs);
    padding-right: token-value(spacer, xs);
    margin-bottom: 0;
    @include content-font(md);
  }
}
