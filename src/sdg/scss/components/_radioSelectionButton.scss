@use "qc-sdg-lib" as *;
@use "checkMixin" as *;

.qc-radio-select-parent {
  display: flex;
  flex-grow: 1;
}

.qc-radio-select {
  display: flex;
  flex-grow: 1;
  align-items: start;
  padding: token-value(spacer, sm);
  margin: 0;
  @include qc-formcontrol-box();

  &::before {
    border-style: solid;
    border-width: rem(1);
    border-color: token-value(color, grey, light);
  }

  &:not(:has(input:disabled)):hover::before {
    cursor: pointer;
  }

  &:not(:has(input:focus, input:disabled)):hover::before {
    border-color: token-value(color, blue, light);
  }

  &:has(input:checked)::before {
    background-color: token-value(color, blue, pale);
  }

  &:has(input:disabled) {
    color: token-value(color, grey, regular);
    cursor: not-allowed;
    &::before {
      background-color: token-value(color, grey, pale);
    }
  }

  .qc-radio-select-label-span {
    display: flex;
    flex-direction: column;
    row-gap: token-value(spacer, xs);
  }

  .qc-radio-select-label-choice {
    @include content-font(md, semi-bold);
    min-height: token-value(spacer, md);
  }

  .qc-radio-select-label-description {
    @include content-font(sm);
  }

  .qc-radio-select-input {
    appearance: none;
    -webkit-appearance: none;
    cursor: pointer;

    display: flex;
    position: relative;

    min-width: token-value(spacer, sm);
    min-height: token-value(spacer, sm);

    margin: rem(4) token-value(spacer, xs) 0 0;
    background-color: token-value(color, white);
    border-style: solid;
    border-color: token-value(color, blue, dark);
    border-width: rem(1);
    border-radius: 100%;

    &::before {
      content: "";
      position: absolute;
      margin: auto;
      inset: 0;
      overflow: hidden;
      opacity: 0;
      border-radius: 100%;
    }

    &:checked {
      border-color: token-value(color, blue, regular);

      &::before {
        opacity: 1;
        background-color: token-value(color, blue, regular);
        width: rem(10);
        height: rem(10);
      }

      &:focus {
        outline: none;
      }
    }

    &:disabled {
      border-color: token-value(color, grey, light);
    }
  }
}
