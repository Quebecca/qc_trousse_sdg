@use "qc-sdg-lib" as *;

.qc-fieldset {
  border: none;
  padding: 0;
  margin: 0 0 token-value(spacer content-block mb);
  justify-items: start;
  row-gap: token-value(spacer, sm);
  legend {
    font-weight: token-value(font weight content bold);
    display: inline-block;
    margin-bottom: token-value(spacer, md);
  }
  &.qc-compact {
    margin-bottom: token-value(spacer, sm);
    legend {
      margin-bottom: token-value(spacer, sm);
    }
  }
}
.qc-fieldset-disabled {
  legend {
    color: token-value(color, grey, regular);
  }
}

.qc-fieldset-required {
  @include content-font(md, bold);
  color: token-value(color, red, regular);
  margin: 0 0 0 rem(4);
}

$invalid-offset: token-value(spacer, xs);
$invalid-border-width: 2px;
.qc-fieldset-invalid,
.qc-fieldset-invalid legend {
  border-left: $invalid-border-width solid token-value(color, red, regular);
  padding-left: $invalid-offset;
}
.qc-fieldset-invalid legend {
  margin-left: calc(-1 * #{$invalid-offset} - $invalid-border-width);
}

%tiled-gap {
  gap: token-value(spacer, xs);
}

.qc-field-elements-tiled-flex-row {
  @extend %tiled-gap;
  display: flex;
}

.qc-field-elements-tiled {
  @extend %tiled-gap;
  display: inline-grid;
  grid-template-columns: repeat(var(--column-count), 1fr);
}

%not-tiled-flex {
  display: flex;
  gap: token-value(spacer, sm);
}

.qc-field-elements-flex-row {
  @extend %not-tiled-flex;
}

.qc-field-elements-flex {
  @extend %not-tiled-flex;
  flex-direction: column;
}

