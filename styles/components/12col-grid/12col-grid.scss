@import "../../sass/12col-grid/variables";
@import "../../sass/12col-grid/mixins/breakpoints";
@import "../../sass/12col-grid/mixins/grid-framework";
@import "../../sass/12col-grid/mixins/grid";

// Container widths
// Set the container width, and override it for fixed navbars in media queries.
// Single container class with breakpoint max-widths
.qc-container {
  @include make-container();
  @include make-container-max-widths();
}

// 100% wide container at all breakpoints
.qc-container-fluid {
  @include make-container();
}

// Responsive containers that are 100% wide until a breakpoint
@each $breakpoint, $container-max-width in $container-max-widths {
  .qc-container-#{$breakpoint} {
    @extend .qc-container-fluid;
  }

  @include media-breakpoint-up($breakpoint, $grid-breakpoints) {
    %responsive-container-#{$breakpoint} {
      max-width: $container-max-width;
    }

    // Extend each breakpoint which is smaller or equal to the current breakpoint
    $extend-breakpoint: true;

    @each $name, $width in $grid-breakpoints {
      @if ($extend-breakpoint) {
        .qc-container#{breakpoint-infix($name, $grid-breakpoints)} {
          @extend %responsive-container-#{$breakpoint};
        }

        // Once the current breakpoint is reached, stop extending
        @if ($breakpoint == $name) {
          $extend-breakpoint: false;
        }
      }
    }
  }
}

// Row
// Rows contain your columns.
.qc-row {
  @include make-row();
}

// Remove the negative margin from default .qc-row, then the horizontal padding
// from all immediate children columns (to prevent runaway style inheritance).
.qc-no-gutters {
  margin-right: 0;
  margin-left: 0;

  > .qc-col,
  > [class*="qc-col-"] {
    padding-right: 0;
    padding-left: 0;
  }
}

// Columns
// Common styles for small and large grid columns
@include make-grid-columns();
